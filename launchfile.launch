
출처 - https://enssionaut.com/board_robotics/974

<launch> -> launch 파일을 시작합니다. launch 파일은 반드시 <launch> 태그로 시작하여 </launch> 태그로 종료됩니다.


<node> -> 노드를 실행시킵니다.

	pkg="mypackage"                              ->	노드가 포함되어 있는 패키지를 지정합니다.

	type="nodetype"                                ->	노드 실행 파일 이름을 기입합니다.

	name="nodename"                            ->	노드 이름을 지정합니다. 노드 내부에서 설정한 이름보다 우선적으로 사용됩니다.

	machine="machine-name"(op)          ->	지정한 기기에서 노드를 실행합니다.

	respawn="true"(op)                            -> 노드가 종료되는 경우 자동적으로 재시작합니다.

	respawn_delay="seconds"(op)           ->	노드에 failure가 발견되는 경우 재시작 전까지 지정된 시간 동안 대기합니다.

	output="log|screen"(op)                    ->	값이 screen인 경우 노드의 stdout/stderr를 화면에 출력합니다. log인 경우 stderr를 화면에 출력하고 로그 파일을 $ROS_HOME/log 경로에 생성합니다.


<machine> -> 노드를 실행시킬 기기를 지정합니다. 모든 노드가 로컬 네트워크에서 구동되는 경우 사용하지 않습니다.

	name="machine-name"                     ->	기기의 이름을 지정합니다. <node> 태그에서 사용하는 machine 애트리뷰트의 것과 대응됩니다.

	address="enssionaut.com"                 ->	기기의 네트워크 주소를 지정합니다.

	env-loader="/opt/ros/fuerte/env.sh" ->	원격 기기의 환경 파일을 지정합니다. 환경 파일은 shell script이어야 하며 필요한 모든 환경 변수가 설정되어 있어야 합니다.

	default="true|false|never"(op)            ->	해당 기기가 모든 노드들의 기본 실행 기기가 될 것인지 설정합니다. 기본 기기가 없다면 로컬 기기가 기본 기기로 작동됩니다.

	timeout="10.0"(op)                            ->	roslaunch에서 몇 초간 해당 기기에 대한 응답이 없으면 연결 실패로 간주할 것인지 시간을 지정합니다.


<include> -> launch 파일 내에서 다른 launch XML 파일을 불러옵니다.

 	file="$(find pkg-name)/path/filename.xml" -> include 할 파일 이름을 입력합니다.

 	ns="foo"(op)                                                 -> 파일을 'foo' 네임스페이스에 대하여 불러옵니다.

 	clear_params="true|false"(op)      -> launch 수행 전에 <include>의 네임스페이스 파라미터를 전부 제거합니다. true인 경우 반드시 ns 애트리뷰트와 같이 사용해야 하며 기본값은 false입니다.


<remap> -> 어떤 문자열을 전부 다른 문자열로 대응시킵니다.

 	from="original-name" -> remap할 원래 이름입니다.

 	to="new-name"           -> 바꿀 이름입니다.


<env> -> 이미 실행된 노드의 환경 변수를 설정합니다. 런치 파일의 환경 변수는 수정할 수 없습니다.

 	name="environment-variable-name" -> 설정할 환경 변수 명을 입력합니다.

 	value="environment-variable-value"  -> 해당 환경 변수의 값을 입력합니다.


<param> -> 파라미터 값을 설정합니다. Parameter Server라고 하는 일종의 전역 값으로 저장되기 때문에 여러 곳에서 참조가 가능합니다. <node> 태그 내에 정의된 경우에는 그 노드의 지역적인 값으로 저장됩니다.

 	name="namespace/name" -> 파라미터 이름을 지정합니다.

 	value="value"(op)    -> 파라미터 값을 지정합니다. value 애트리뷰트를 사용하지 않는 경우 반드시 textfile, binfile, command 중 한 가지 애트리뷰트를 사용하여 파라미터를 설정해야 합니다.

 	type="str|int|double|bool"(op)                        -> 파라미터 자료형을 지정합니다. 따로 지정하지 않는 경우 roslaunch가 정해진 규칙에 따라 자료형을 지정합니다.

 	textfile="$(find pkg-name)/path/file.txt"(op) -> 지정한 파일의 내용이 string 형태로 파라미터에 저장됩니다. 파일은 반드시 local하게 접근이 가능해야 합니다.

 	binfile="$(find pkg-name)/path/file"(op) -> 지정한 파일의 내용이 base64-encoded XML-RPC binary object로 파라미터에 저장됩니다. textfile과 마찬가지로 local하게 접근이 가능해야 합니다.

 	command="$(find pkg-name)/exe '$(find pkg-name)/arg.txt'"(op)    -> 커맨드 출력이 string 형태로 파라미터에 저장됩니다.


<rosparam> -> rosparam을 이용해서 ROS 파라미터를 설정합니다. rosparam은 YAML 파일을 이용해 파라미터 서버의 파라미터 값들을 확인하고 수정할 수 있도록 하는 기능입니다.

 	command="load|dump|delete" (op)        -> rosparam에서 사용하는 커맨드를 지정합니다. 기본값은 load입니다.

 	file="$(find pkg-name)/path/foo.yaml"  -> rosparam 파일의 이름을 입력합니다. rosparam 커맨드로 load나 dump를 설정한 경우에만 사용됩니다.

 	param="param-name"                            -> 파라미터 이름을 지정합니다.

 	ns="namespace" (op)                              -> 파라미터를 지정된 네임스페이스에 scope 시킵니다.

 	subst_value=true|false (op)                     -> YAML 파일 내에 있는 'substitution args'의 사용 여부를 설정합니다. (참조: http://wiki.ros.org/roslaunch/XML#substitution_args)


<group> -> 다수의 노드에 한꺼번에 설정을 적용시킬 때 사용합니다. 하위 요소로 <node>, <param>, <remap>, <machine>, <rosparam>, <include>, <env>, <test>, <arg>를 가질 수 있습니다.

 	ns="namespace" (op)                 -> 노드 그룹을 지정된 네임스페이스에 부여합니다.

 	clear_params="true|false" (op)   -> launch 수행 전에 그룹의 네임스페이스 파라미터를 전부 제거합니다. true인 경우 반드시 ns 애트리뷰트와 같이 사용해야 합니다.


<test> -> 노드를 test node로서 실행시킵니다. 애트리뷰트는 <node> 태그와 거의 동일하며 respawn, output, machine 애트리뷰트는 사용할 수 없습니다.


<arg> -> launch 파일 내부에서 지역변수처럼 사용되는 값을 정의합니다.

 	name="arg_name"                -> 인자 이름을 지정합니다.

 	default="default value" (op) -> 인자의 기본값을 설정합니다. value 애트리뷰트와 동시에 사용할 수 없습니다.

 	value="value" (op)                -> 인자 값을 설정합니다. default 애트리뷰트와 동시에 사용할 수 없습니다.
